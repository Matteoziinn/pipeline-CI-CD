  name: CI/CD Pipeline Java com H2

  on:
    push:
      branches: [ "main" ]
    pull_request:
      branches: [ "main" ]

  jobs:
    build-and-test:
      name: Build & Test com Java
      runs-on: ubuntu-latest
      steps:
        - name: Checkout do código
          uses: actions/checkout@v4

        - name: Configurar JDK 17
          uses: actions/setup-java@v4
          with:
            java-version: '17'
            distribution: 'temurin'

        - name: Verificar estrutura de pastas
          run: ls -R gerenciadortarefas

        - name: Build e Testes com Maven
          run: |
            if [ -f gerenciadortarefas/pom.xml ]; then
              mvn -B verify -f gerenciadortarefas/pom.xml
            else
              echo "pom.xml não encontrado em gerenciadortarefas, tentando raiz..."
              mvn -B verify
            fi

    build-and-push-docker:
      name: Construir e Publicar Imagem Docker
      runs-on: ubuntu-latest
      needs: build-and-test
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      permissions:
        contents: read
        packages: write
      steps:
        - name: Checkout do código
          uses: actions/checkout@v4

        - name: Login no GitHub Container Registry
          uses: docker/login-action@v3
          with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}

        - name: Construir e enviar a imagem Docker
          uses: docker/build-push-action@v5
          with:
            context: ./gerenciadortarefas
            file: ./gerenciadortarefas/Dockerfile
            push: true
            tags: ghcr.io/matteoziinn/pipeline-ci-cd:latest

    deploy-staging:
      name: Deploy em Homologação
      runs-on: ubuntu-latest
      needs: build-and-push-docker
      environment:
        name: staging
        url: https://staging.gerenciadortarefas.com
      steps:
        - name: Deploy para ambiente de Staging
          run: |
            echo "Deploy para Staging..."
            # Adicione aqui comandos reais de deploy, ex.: ssh, docker-compose, kubectl

    deploy-production:
      name: Deploy em Produção
      runs-on: ubuntu-latest
      needs: deploy-staging
      environment:
        name: production
        url: https://gerenciadortarefas.com
      steps:
        - name: Deploy para ambiente de Produção
          run: |
            echo "Deploy para Produção..."
            # Adicione aqui comandos reais de deploy

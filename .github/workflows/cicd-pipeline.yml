name: CI/CD Pipeline Java com H2

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    name: Build & Test com Java
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configurar JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build e Testes com Maven
        run: mvn -B package --file gerenciadortarefas/pom.xml

  build-and-push-docker:
    name: Construir e Publicar Imagem Docker
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Login no GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extrair versão do Maven
        run: echo "PROJECT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

      - name: Construir e enviar a imagem Docker
        run: |
          REPO=$(echo "${GITHUB_REPOSITORY}" | tr '[:upper:]' '[:lower:]')
          docker build -t ghcr.io/$REPO:latest -t ghcr.io/$REPO:${GITHUB_SHA} ./gerenciadortarefas
          docker push ghcr.io/$REPO:latest
          docker push ghcr.io/$REPO:${GITHUB_SHA}



  deploy-staging:
    name: Deploy em Homologação
    runs-on: ubuntu-latest
    needs: build-and-push-docker
    environment:
      name: staging
      url: https://staging.gerenciador-tarefas.com
    steps:
      - name: Deploy para ambiente de Staging
        run: echo "Deploy para Staging..."

  deploy-production:
    name: Deploy em Produção
    runs-on: ubuntu-latest
    needs: deploy-staging
    environment:
      name: production
      url: https://gerenciador-tarefas.com
    steps:
      - name: Deploy para ambiente de Produção
        run: echo "Deploy para Produção..."
